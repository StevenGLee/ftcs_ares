<launch>

    <!-- 设置launch文件的参数 -->
    <arg name="world_name" value="$(find ares_gazebo)/worlds/grassground.world"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="rb1x" default="0.0"/>
    <arg name="rb1y" default="1.0"/>
    <arg name="rb2x" default="2.0"/>
    <arg name="rb2y" default="3.0"/>
    <arg name="rb3x" default="4.0"/>
    <arg name="rb3y" default="5.0"/>
    
    <!-- 运行gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>
    
    <node pkg="topology_publisher" name="topology_publisher" type="topology_publisher.py" args="fixed" output="screen"/>
    <group ns="robot1">
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ares_description)/urdf/ares_laser.xacro' ns:=robot1" /> 
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
            <param name="publish_frequency" type="double" value="50.0" />
        </node>
        <node pkg="velocity_manager" name="velocity_manager" type="velocity_manager_first_order.py" output="screen"/>
        <node pkg="flowfield_generator" name="flowfield_generator" type="periodical-random_velocity-flow.py" output="screen"/>
        <node name="urdf_spawner1" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robot1 -param robot_description -x $(arg rb1x) -y $(arg rb1y)"/>   
    </group>
    
    <group ns="robot2">
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ares_description)/urdf/ares_laser.xacro' ns:=robot2" /> 
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
            <param name="publish_frequency" type="double" value="50.0" />
        </node>
        <node pkg="velocity_manager" name="velocity_manager" type="velocity_manager_first_order.py" output="screen"/>
        <node pkg="flowfield_generator" name="flowfield_generator" type="periodical-random_velocity-flow.py" output="screen"/>
        <node name="urdf_spawner2" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robot2 -param robot_description -x $(arg rb2x) -y $(arg rb2y)"/>   
    </group>
    
    <group ns="robot3">
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ares_description)/urdf/ares_laser.xacro' ns:=robot3" /> 
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
            <param name="publish_frequency" type="double" value="50.0" />
        </node>
        <node pkg="velocity_manager" name="velocity_manager" type="velocity_manager_first_order.py" output="screen"/>
        <node pkg="flowfield_generator" name="flowfield_generator" type="periodical-random_velocity-flow.py" output="screen"/>
        <node name="urdf_spawner3" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robot3 -param robot_description -x $(arg rb3x) -y $(arg rb3y)"/>   
    </group>
</launch> 
